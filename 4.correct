parsing...
  1 :   0 : [TO_RUN_A] : [TO_RUN_A]
  2 :   0 :       |ID| : testProgram
  3 :   0 :    [IS_TO] :    [IS_TO]
  4 :   0 :    <COLON> :    <COLON>
  5 :   1 :      [LET] :      [LET]
  6 :   1 :       |ID| :          I
  7 :   1 :       [BE] :       [BE]
  8 :   1 :   |DIGSEQ| :          0
  9 :   1 :   <PERIOD> :   <PERIOD>
 10 :   2 :    [WHILE] :    [WHILE]
 11 :   2 :       |ID| :          I
 12 :   2 :   <COMPOP> :          <
 13 :   2 :   |DIGSEQ| :         10
 14 :   2 :  [DO_THIS] :  [DO_THIS]
 15 :   2 :    <COLON> :    <COLON>
 16 :   3 :       |ID| :       play
 17 :   3 :   <PERIOD> :   <PERIOD>
 18 :   4 :      [LET] :      [LET]
 19 :   4 :       |ID| :          I
 20 :   4 :       [BE] :       [BE]
 21 :   4 :       |ID| :          I
 22 :   4 :   |MATHOP| :          +
 23 :   4 :   |DIGSEQ| :          1
 24 :   4 :   <PERIOD> :   <PERIOD>
 25 :   5 :   [REPEAT] :   [REPEAT]
 26 :   5 :   <PERIOD> :   <PERIOD>
 27 :   7 :       [TO] :       [TO]
 28 :   7 :       |ID| :       play
 29 :   7 :        [A] :        [A]
 30 :   7 :       |ID| :     guitar
 31 :   7 :    [IS_TO] :    [IS_TO]
 32 :   7 :    <COLON> :    <COLON>
 33 :   8 :      [LET] :      [LET]
 34 :   8 :       |ID| :          A
 35 :   8 :       [BE] :       [BE]
 36 :   8 :   |DIGSEQ| :         10
 37 :   8 :   <PERIOD> :   <PERIOD>
 38 :   9 :      [LET] :      [LET]
 39 :   9 :       |ID| :          B
 40 :   9 :       [BE] :       [BE]
 41 :   9 :   |DIGSEQ| :         20
 42 :   9 :   |MATHOP| :          +
 43 :   9 :       |ID| :          A
 44 :   9 :   <PERIOD> :   <PERIOD>
output from parse:
program
| run function
| | statementlist.
| | | letstatement (to I)
| | | | literal: 0
| | | dostatement 
| | | | statementlist.
| | | | | expressionstatement 
| | | | | | call (play)
| | | | | letstatement (to I)
| | | | | | binaryExpression (+)
| | | | | | | varRef (I)
| | | | | | | literal: 1
| function (guitar.play)
| | statementlist.
| | | letstatement (to A)
| | | | literal: 10
| | | letstatement (to B)
| | | | binaryExpression (+)
| | | | | literal: 20
| | | | | varRef (A)
checking semantics...
generating code...
generated program was:
---- ##run ----
0         start (##run)
1   $0  = store 0
2   $1  = store 10
3   $2  = lt $0  $1 
4         bz $2 ->16
5         push $0 
6         push $1 
7         push $2 
8         call
9   $3  = pop
10  $2  = pop
11  $1  = pop
12  $0  = pop
13  $4  = store 1
14  $0  = add $0  $4 
15       = jump ->2
16        noop
---- play ----
0         start (play)
1   $0  = store 10
2   $1  = store 20
3   $2  = add $1  $0 
4   $3  = pop
5         push $0 

running program...
                                    registers: 
                                    stack: 
            1   $0  = store 0
                                    registers: 
                                    $0 = 0 ( , s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 0 ( , s)
                                    $1 = 10 ( , s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    stack: 
                                    0=0
            6         push $1 
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    stack: 
                                    0=0
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=0
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=0
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=0
            12  $0  = pop
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 0 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=1
            6         push $1 
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=1
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=1
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=1
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=1
            12  $0  = pop
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 1 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=2
            6         push $1 
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=2
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=2
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=2
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=2
            12  $0  = pop
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 2 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=3
            6         push $1 
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=3
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=3
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=3
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=3
            12  $0  = pop
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 3 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=4
            6         push $1 
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=4
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=4
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=4
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=4
            12  $0  = pop
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 4 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=5
            6         push $1 
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=5
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=5
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=5
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=5
            12  $0  = pop
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 5 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=6
            6         push $1 
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=6
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=6
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=6
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=6
            12  $0  = pop
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 6 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=7
            6         push $1 
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=7
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=7
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=7
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=7
            12  $0  = pop
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 7 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=8
            6         push $1 
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=8
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=8
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=8
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=8
            12  $0  = pop
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 8 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            5         push $0 
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=9
            6         push $1 
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=9
                                    1=10
            7         push $2 
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
            8         call
                                    registers: 
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=ptr
            0         start (play)
                                    registers: 
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=ptr
            1   $0  = store 10
                                    registers: 
                                    $0 = 10 ( , s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=ptr
            2   $1  = store 20
                                    registers: 
                                    $0 = 10 ( , s)
                                    $1 = 20 ( , s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=ptr
            3   $2  = add $1  $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=ptr
            4   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
            5         push $0 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr ( , s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=10
            
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = ptr (g, s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
                                    3=10
            9   $3  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 30 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=9
                                    1=10
                                    2=1
            10  $2  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 20 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=9
                                    1=10
            11  $1  = pop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
                                    0=9
            12  $0  = pop
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    stack: 
            13  $4  = store 1
                                    registers: 
                                    $0 = 9 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 ( , s)
                                    stack: 
            14  $0  = add $0  $4 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            15       = jump ->2
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            2   $1  = store 10
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 1 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            3   $2  = lt $0  $1 
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 0 ( , s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            4         bz $2 ->16
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 0 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
            16        noop
                                    registers: 
                                    $0 = 10 (g, s)
                                    $1 = 10 (g, s)
                                    $2 = 0 (g, s)
                                    $3 = 10 (g, s)
                                    $4 = 1 (g, s)
                                    stack: 
